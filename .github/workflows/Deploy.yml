name: Deploy to Github Page Repository(Google-DSC-Kookmin.github.io)

on:
  push:
    branches:
      - github_Action # TODO : Delete (For debug)
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  REPO : "Google-DSC-Kookmin/Google-DSC-Kookmin.github.io"

jobs:
  Deploy_to_other_repo:
    # if: contains(github.event.pull_request.labels.*.name, 'no update') == false && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
    
      - name : Build React Page
        run: |
          cd project-front
          npm install
          CI=false npm run build

      - name: Checkout repository 2
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          repository: ${{ env.REPO }}
          token: ${{ env.GITHUB_TOKEN }}
          path: second_repo
  

      - name: Generate new branch name
        run: |
          TIME_STAMP=$(date +'%Y.%m.%d.%H.%M.%S')
          echo "BRANCH_NAME=React-Front_$TIME_STAMP" >> $GITHUB_ENV
          echo "PR_TITLE=New React build result - $TIME_STAMP" >> $GITHUB_ENV

      - name: Create New Branch and Commit Build Result
        run: |
          cd second_repo
          git config user.email "actions@github.com"
          git config user.name "[Bot] GitHub Actions"
          git checkout -b React-Front_$(date +'%Y.%m.%d.%H.%M.%S')
          cp -r ../project-front/build/* .
          git add .
          git commit -m "Commit build result"

      - name: Push to Second Repo
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ env.GITHUB_TOKEN }}
          branch: ${{ env.BRANCH_NAME }}
          directory: second_repo

      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ env.BRANCH_NAME }}
          destination_branch: "main"
          github_token: ${{ env.GITHUB_TOKEN }}
          pr_title: ${{ env.PR_TITLE }}
          pr_body: "This PR is auto-generated by Github Action. Source commit SHA: ${{ github.event.pull_request.head.sha }}. [Link to A Repo](${{ github.event.pull_request.html_url }})"
          pr_label: "auto"
